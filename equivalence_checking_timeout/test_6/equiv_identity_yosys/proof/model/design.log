
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.40+4 (git sha1 47bdb3e32f7, g++ 9.4.0-1ubuntu1~20.04.2 -fPIC -Os)

-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: cells_cmos.v
Parsing formal SystemVerilog input from `cells_cmos.v' to AST representation.
Storing AST representation for module `$abstract\NOT'.
Storing AST representation for module `$abstract\NAND'.
Storing AST representation for module `$abstract\NOR'.
Storing AST representation for module `$abstract\DFF'.
Storing AST representation for module `$abstract\DFFSR'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: cells_cyclone_v.v
Parsing formal SystemVerilog input from `cells_cyclone_v.v' to AST representation.
Storing AST representation for module `$abstract\dffeas'.
Storing AST representation for module `$abstract\cyclonev_lcell_comb'.
Storing AST representation for module `$abstract\cyclonev_clkena'.
Storing AST representation for module `$abstract\cyclonev_io_ibuf'.
Storing AST representation for module `$abstract\cyclonev_io_obuf'.
Storing AST representation for module `$abstract\cyclone10lp_lcell_comb'.
Storing AST representation for module `$abstract\cyclone10lp_io_ibuf'.
Storing AST representation for module `$abstract\cyclone10lp_io_obuf'.
Storing AST representation for module `$abstract\cyclone10lp_clkena'.
Storing AST representation for module `$abstract\cyclone10gx_lcell_comb'.
Storing AST representation for module `$abstract\cyclone10gx_io_ibuf'.
Storing AST representation for module `$abstract\cyclone10gx_io_obuf'.
Storing AST representation for module `$abstract\cyclone10gx_clkena'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: cells_verific.v
Parsing formal SystemVerilog input from `cells_verific.v' to AST representation.
Storing AST representation for module `$abstract\VERIFIC_FADD'.
Storing AST representation for module `$abstract\VERIFIC_DFFRS'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: cells_xilinx_7.v
Parsing formal SystemVerilog input from `cells_xilinx_7.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (cells_xilinx_7.v:18)
Storing AST representation for module `$abstract\IBUF'.
Storing AST representation for module `$abstract\OBUF'.
Storing AST representation for module `$abstract\OBUFT'.
Storing AST representation for module `$abstract\GND'.
Storing AST representation for module `$abstract\INV'.
Storing AST representation for module `$abstract\LUT1'.
Storing AST representation for module `$abstract\LUT2'.
Storing AST representation for module `$abstract\LUT3'.
Storing AST representation for module `$abstract\LUT4'.
Storing AST representation for module `$abstract\LUT5'.
Storing AST representation for module `$abstract\LUT6'.
Storing AST representation for module `$abstract\MUXCY'.
Storing AST representation for module `$abstract\MUXF7'.
Storing AST representation for module `$abstract\MUXF8'.
Storing AST representation for module `$abstract\VCC'.
Storing AST representation for module `$abstract\XORCY'.
Storing AST representation for module `$abstract\CARRY4'.
Storing AST representation for module `$abstract\FD_1'.
Storing AST representation for module `$abstract\FDC_1'.
Storing AST representation for module `$abstract\FDCE_1'.
Storing AST representation for module `$abstract\FDCE'.
Storing AST representation for module `$abstract\FDCP_1'.
Storing AST representation for module `$abstract\FDCPE_1'.
Storing AST representation for module `$abstract\FDCPE'.
Storing AST representation for module `$abstract\FDCP'.
Storing AST representation for module `$abstract\FDC'.
Storing AST representation for module `$abstract\FDDRCPE'.
Storing AST representation for module `$abstract\FDDRRSE'.
Storing AST representation for module `$abstract\FDE_1'.
Storing AST representation for module `$abstract\FDE'.
Storing AST representation for module `$abstract\FDP_1'.
Storing AST representation for module `$abstract\FDPE_1'.
Storing AST representation for module `$abstract\FDPE'.
Storing AST representation for module `$abstract\FDP'.
Storing AST representation for module `$abstract\FDR_1'.
Storing AST representation for module `$abstract\FDRE_1'.
Storing AST representation for module `$abstract\FDRE'.
Storing AST representation for module `$abstract\FDRS_1'.
Storing AST representation for module `$abstract\FDRSE_1'.
Storing AST representation for module `$abstract\FDRSE'.
Storing AST representation for module `$abstract\FDRS'.
Storing AST representation for module `$abstract\FDR'.
Storing AST representation for module `$abstract\FDS_1'.
Storing AST representation for module `$abstract\FDSE_1'.
Storing AST representation for module `$abstract\FDSE'.
Storing AST representation for module `$abstract\FDS'.
Storing AST representation for module `$abstract\FD'.
Storing AST representation for module `$abstract\LD_1'.
Storing AST representation for module `$abstract\LDC_1'.
Storing AST representation for module `$abstract\LDCE_1'.
Storing AST representation for module `$abstract\LDCE'.
Storing AST representation for module `$abstract\LDCP_1'.
Storing AST representation for module `$abstract\LDCPE_1'.
Storing AST representation for module `$abstract\LDCPE'.
Storing AST representation for module `$abstract\LDCP'.
Storing AST representation for module `$abstract\LDC'.
Storing AST representation for module `$abstract\LDE_1'.
Storing AST representation for module `$abstract\LDE'.
Storing AST representation for module `$abstract\LDP_1'.
Storing AST representation for module `$abstract\LDPE_1'.
Storing AST representation for module `$abstract\LDPE'.
Storing AST representation for module `$abstract\LDP'.
Storing AST representation for module `$abstract\LD'.
Storing AST representation for module `$abstract\BUFCF'.
Storing AST representation for module `$abstract\BUFE'.
Storing AST representation for module `$abstract\BUFGCE_1'.
Storing AST representation for module `$abstract\BUFGCE'.
Storing AST representation for module `$abstract\BUFGCTRL'.
Storing AST representation for module `$abstract\BUFG_LB'.
Storing AST representation for module `$abstract\BUFGMUX_1'.
Storing AST representation for module `$abstract\BUFGMUX_CTRL'.
Storing AST representation for module `$abstract\BUFGMUX'.
Storing AST representation for module `$abstract\BUFGMUX_VIRTEX4'.
Storing AST representation for module `$abstract\BUFGP'.
Storing AST representation for module `$abstract\BUFG'.
Storing AST representation for module `$abstract\BUFHCE'.
Storing AST representation for module `$abstract\BUFH'.
Storing AST representation for module `$abstract\BUFIO2FB'.
Storing AST representation for module `$abstract\BUFIODQS'.
Storing AST representation for module `$abstract\BUFIO'.
Storing AST representation for module `$abstract\BUFMRCE'.
Storing AST representation for module `$abstract\BUFMR'.
Storing AST representation for module `$abstract\BUFT'.
Storing AST representation for module `$abstract\BUF'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: cells_yosys.v
Parsing formal SystemVerilog input from `cells_yosys.v' to AST representation.
Storing AST representation for module `$abstract\$_DLATCH_N_'.
Storing AST representation for module `$abstract\$_DLATCH_P_'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: syn_identity.v
Parsing formal SystemVerilog input from `syn_identity.v' to AST representation.
Storing AST representation for module `$abstract\top_1'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: syn_yosys.v
Parsing formal SystemVerilog input from `syn_yosys.v' to AST representation.
Storing AST representation for module `$abstract\top'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: top.v
Parsing formal SystemVerilog input from `top.v' to AST representation.
top.v:1: ERROR: Re-definition of module `$abstract\top'!
